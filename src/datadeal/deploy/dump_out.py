import struct
import numpy as np

"""
[0.33694386, 0.16260724, 0.34497467, 0.272598, 0.24577683, 0.16936412, 0.4052017, 0.23417409, 0.420451, 0.22863777, 0.10859343, 0.27901223, 0.48692408, 0.24474595, 0.2131469, 0.17992555, 0.5023406, 0.22164035, 0.1564129, 0.16333498, 0.53938687, 0.28066725, 0.5019938, 0.31877306, 0.38593054, 0.44877234, 0.5116443, 0.5659494, 0.27267328, 0.5803893, 0.3368946, 0.33180216, 0.35108715, 0.5286323, 0.26155692, 0.18843783, 0.22538936, 0.20809042, 0.2679227, 0.3011071, 0.18253815, 0.17735703, 0.5401628, 0.105130956, 0.117503226, 0.35454166, 0.14025916, 0.16518816, 0.15395905, 0.35690457, 0.3044631, 0.47841704, 0.24743773, 0.3560374, 0.23847581, 0.34936395, 0.39382717, 0.42635095, 0.44736832, 0.2705193, 0.33320194, 0.36136422, 0.33003587, 0.14665243, 0.21185641, 0.19997735, 0.5276178, 0.267062, 0.30228305, 0.77496535, 0.3068626, 0.5191417, 0.24040042, 0.3038338, 0.62930065, 0.6786277, 0.3902934, 0.5592512, 0.39748767, 0.47518986, 0.24882819, 0.39541575, 0.7107541, 0.1534659, 0.36376658, 0.50157106, 0.41083416, 0.46955657, 0.43735132, 0.14853708, 0.33729655, 0.2897546, 0.39710727, 0.12642647, 0.12101772, 0.4704896, 0.20588402, 0.26595116, 0.21658707, 0.29128718, 0.23557422, 0.66206944, 0.50319326, 0.3796948, 0.32402647, 0.62216187, 0.46964404, 0.3350887, 0.29720503, 0.41971007, 0.15107864, 0.5392459, 0.38101348, 0.31951952, 0.2577134, 0.31694493, 0.60630184, 0.4513625, 0.1650606, 0.29833624, 0.20846568, 0.3954671, 0.24474747, 0.25035322, 0.18979414, 0.39343262, 0.17719008, 0.26442406]
47
0.9422097
"""

bin_path = '/home/ruiming/workspace/pro/fatigue/data/test/bins/NUE_18_OUT0.bin'

def cosine_similarity(x,y):
    num = x.dot(y.T)
    denom = np.linalg.norm(x) * np.linalg.norm(y)
    return num / denom

float_features_lists = []
int16_features_lists = []

with open(bin_path, 'rb') as fp:
    if False:
        info = fp.read()
        print(len(info)/2)
    else:
        for i in range(2):
            info1 = fp.read(2)
            
            info1 = struct.unpack('<h', info1)[0]
            
            int16_features_lists.append(info1)
            float_features_lists.append(info1 / (2**15))

print(int16_features_lists)
print(float_features_lists)